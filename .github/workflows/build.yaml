name: Build

on:
  workflow_call:
    inputs:
      site:
        description: 'The domain where to deploy. Will be used for absolute references in the build.'
        required: false
        type: string
      basepath:
        description: 'Base path of the build.'
        required: false
        type: string

permissions:
  contents: read
  security-events: write

jobs:
  node:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21.2.0'
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '8.8.0'
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Restore pnpm store
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      - name: Save pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Format
        run: pnpm fmt:check
      - name: Lint
        run: pnpm lint:report -o eslint-results.sarif
        continue-on-error: true
      - name: Upload lint analysis
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true
        # Rerun in order to fail if needed but allow previous analysis
      - name: Lint
        run: pnpm lint:check

      - name: Build
        run: pnpm build
        env:
          ASTRO_SITE: ${{ inputs.site }}
          ASTRO_BASE_URL: ${{ inputs.basepath }}
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist
          if-no-files-found: error

  deno:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.37.2

      - name: Format
        run: deno fmt --check
      - name: Lint
        run: deno lint
